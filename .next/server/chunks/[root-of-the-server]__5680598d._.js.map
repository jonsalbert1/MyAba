{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/lib/supabaseAdmin.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\nexport const supabaseAdmin = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!,\r\n  { auth: { persistSession: false }, db: { schema: \"public\" } }\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,IAAA,iKAAY,gFAEvC,QAAQ,GAAG,CAAC,yBAAyB,EACrC;IAAE,MAAM;QAAE,gBAAgB;IAAM;IAAG,IAAI;QAAE,QAAQ;IAAS;AAAE","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/pages/api/quiz/list.ts"],"sourcesContent":["// pages/api/quiz/list.ts\r\nimport type { NextApiRequest, NextApiResponse } from \"next\";\r\nimport { supabaseAdmin } from \"../../../lib/supabaseAdmin\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  const deckId = (req.query.deckId as string) || \"default\";\r\n\r\n  const { data, error } = await supabaseAdmin\r\n    .from(\"quiz_items\")\r\n    .select(\"domain,question,a,b,c,d,answer,rationale\")\r\n    .eq(\"deck_id\", deckId)\r\n    .order(\"id\", { ascending: true });\r\n\r\n  if (error) return res.status(500).json({ error: error.message });\r\n  res.status(200).json({ records: data ?? [] });\r\n}\r\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AAEzB;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,MAAM,SAAS,AAAC,IAAI,KAAK,CAAC,MAAM,IAAe;IAE/C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8HAAa,CACxC,IAAI,CAAC,cACL,MAAM,CAAC,4CACP,EAAE,CAAC,WAAW,QACd,KAAK,CAAC,MAAM;QAAE,WAAW;IAAK;IAEjC,IAAI,OAAO,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,OAAO,MAAM,OAAO;IAAC;IAC9D,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,SAAS,QAAQ,EAAE;IAAC;AAC7C","debugId":null}}]
}