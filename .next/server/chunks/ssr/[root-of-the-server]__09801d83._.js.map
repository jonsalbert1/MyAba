{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/lib/storage.ts"],"sourcesContent":["// lib/storage.ts\r\nexport type FlashCard = { term: string; def: string };\r\nexport type QuizItem = {\r\n  domain?: string;\r\n  question: string;\r\n  a: string;\r\n  b: string;\r\n  c: string;\r\n  d: string;\r\n  answer: \"A\" | \"B\" | \"C\" | \"D\";\r\n  rationale?: string;\r\n};\r\n\r\nconst safe = <T,>(key: string, fallback: T): T => {\r\n  if (typeof window === \"undefined\") return fallback;\r\n  try {\r\n    const raw = localStorage.getItem(key);\r\n    return raw ? (JSON.parse(raw) as T) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n};\r\n\r\nexport const loadFlashcards = () => safe<FlashCard[]>(\"safmeds:deck\", []);\r\nexport const saveFlashcards = (arr: FlashCard[]) =>\r\n  localStorage.setItem(\"safmeds:deck\", JSON.stringify(arr));\r\n\r\nexport const loadQuiz = () => safe<QuizItem[]>(\"quiz:deck\", []);\r\nexport const saveQuiz = (arr: QuizItem[]) =>\r\n  localStorage.setItem(\"quiz:deck\", JSON.stringify(arr));\r\n\r\nexport type SafMedsTrial = { timestamp: number; correct: number; errors: number; secs: number };\r\nexport const loadSafMedsTrials = () => safe<SafMedsTrial[]>(\"safmeds:trials\", []);\r\nexport const saveSafMedsTrials = (arr: SafMedsTrial[]) =>\r\n  localStorage.setItem(\"safmeds:trials\", JSON.stringify(arr));\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;;;;;;;;;;AAajB,MAAM,OAAO,CAAK,KAAa;IAC7B,wCAAmC,OAAO;;;AAO5C;AAEO,MAAM,iBAAiB,IAAM,KAAkB,gBAAgB,EAAE;AACjE,MAAM,iBAAiB,CAAC,MAC7B,aAAa,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;AAE/C,MAAM,WAAW,IAAM,KAAiB,aAAa,EAAE;AACvD,MAAM,WAAW,CAAC,MACvB,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;AAG5C,MAAM,oBAAoB,IAAM,KAAqB,kBAAkB,EAAE;AACzE,MAAM,oBAAoB,CAAC,MAChC,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/pages/safmeds.tsx"],"sourcesContent":["// pages/safmeds.tsx\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport {\r\n  FlashCard,\r\n  loadFlashcards,\r\n  saveFlashcards,\r\n  loadSafMedsTrials,\r\n  saveSafMedsTrials,\r\n  SafMedsTrial,\r\n} from \"../lib/storage\";\r\n\r\nexport default function SafMedsPage() {\r\n  const [deck, setDeck] = useState<FlashCard[]>([]);\r\n  const [secs, setSecs] = useState(60);\r\n  const [running, setRunning] = useState(false);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n  const [current, setCurrent] = useState(0);\r\n  const [trials, setTrials] = useState<SafMedsTrial[]>([]);\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  // keep latest counts for saving at stop/auto-stop\r\n  const correctRef = useRef(0);\r\n  const errorsRef = useRef(0);\r\n  const stoppingRef = useRef(false);\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Hydrate from DB first; fall back to localStorage\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    async function loadAll() {\r\n      // flashcards from DB\r\n      try {\r\n        const fc = await fetch(\"/api/flashcards/list?deckId=default\").then((r) => r.json());\r\n        if (!cancelled && Array.isArray(fc.records) && fc.records.length) {\r\n          setDeck(fc.records);\r\n        } else if (!cancelled) {\r\n          setDeck(loadFlashcards());\r\n        }\r\n      } catch {\r\n        if (!cancelled) setDeck(loadFlashcards());\r\n      }\r\n\r\n      // trials from DB\r\n      try {\r\n        const tr = await fetch(\"/api/safmeds/listTrials?deckId=default\").then((r) => r.json());\r\n        if (!cancelled && Array.isArray(tr.records)) {\r\n          const mapped: SafMedsTrial[] = tr.records.map((r: any) => ({\r\n            timestamp: Number(r.timestamp_ms),\r\n            correct: Number(r.correct),\r\n            errors: Number(r.errors),\r\n            secs: Number(r.secs),\r\n          }));\r\n          setTrials(mapped);\r\n        } else if (!cancelled) {\r\n          setTrials(loadSafMedsTrials());\r\n        }\r\n      } catch {\r\n        if (!cancelled) setTrials(loadSafMedsTrials());\r\n      }\r\n    }\r\n\r\n    loadAll();\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // mirror counts into refs\r\n  useEffect(() => {\r\n    correctRef.current = correct;\r\n  }, [correct]);\r\n  useEffect(() => {\r\n    errorsRef.current = errors;\r\n  }, [errors]);\r\n\r\n  // timer\r\n  useEffect(() => {\r\n    if (!running) return;\r\n    timerRef.current = setInterval(() => {\r\n      setSecs((s) => {\r\n        if (s <= 1) {\r\n          stopTrial(true); // auto-stop at 0\r\n          return 0;\r\n        }\r\n        return s - 1;\r\n      });\r\n    }, 1000);\r\n    return () => {\r\n      if (timerRef.current) clearInterval(timerRef.current);\r\n    };\r\n  }, [running]);\r\n\r\n  const card = deck[current];\r\n\r\n  function startTrial() {\r\n    setCorrect(0);\r\n    setErrors(0);\r\n    correctRef.current = 0;\r\n    errorsRef.current = 0;\r\n    stoppingRef.current = false;\r\n\r\n    setSecs(60);\r\n    setFlipped(false);\r\n    setRunning(true);\r\n  }\r\n\r\n  function stopTrial(auto = false) {\r\n    if (stoppingRef.current) return;\r\n    stoppingRef.current = true;\r\n\r\n    setRunning(false);\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n\r\n    // Save to local history\r\n    const rec: SafMedsTrial = {\r\n      timestamp: Date.now(),\r\n      correct: correctRef.current,\r\n      errors: errorsRef.current,\r\n      secs: 60,\r\n    };\r\n    const next = [...trials, rec];\r\n    setTrials(next);\r\n    saveSafMedsTrials(next);\r\n\r\n    // Persist to DB (non-blocking)\r\n    fetch(\"/api/safmeds/addTrial\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        deckId: \"default\",\r\n        timestamp_ms: rec.timestamp,\r\n        correct: rec.correct,\r\n        errors: rec.errors,\r\n        secs: rec.secs,\r\n      }),\r\n    }).catch(() => {});\r\n\r\n    // If auto, keep UI calm; if manual stop, do nothing special\r\n  }\r\n\r\n  const accuracy = useMemo(() => {\r\n    const total = correct + errors;\r\n    return total === 0 ? 0 : Math.round((correct / total) * 100);\r\n  }, [correct, errors]);\r\n\r\n  function nextCard() {\r\n    if (!deck.length) return;\r\n    setCurrent((i) => (i + 1) % deck.length);\r\n    setFlipped(false); // always show Term first\r\n  }\r\n\r\n  // Buttons rely on live \"running\" (buttons disabled when not running)\r\n  function markCorrect() {\r\n    if (!running) return;\r\n    setCorrect((c) => {\r\n      const v = c + 1;\r\n      correctRef.current = v;\r\n      return v;\r\n    });\r\n    nextCard();\r\n  }\r\n\r\n  function markError() {\r\n    if (!running) return;\r\n    setErrors((e) => {\r\n      const v = e + 1;\r\n      errorsRef.current = v;\r\n      return v;\r\n    });\r\n    nextCard();\r\n  }\r\n\r\n  function onCSVUpload(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const f = e.target.files?.[0];\r\n    if (!f) return;\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const txt = String(reader.result || \"\");\r\n      const lines = txt.split(/\\r?\\n/).filter(Boolean);\r\n      const rows: FlashCard[] = [];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const parts = lines[i].split(\",\");\r\n        if (i === 0 && /term/i.test(parts[0])) continue;\r\n        if (parts.length >= 2) rows.push({ term: parts[0].trim(), def: parts.slice(1).join(\",\").trim() });\r\n      }\r\n      saveFlashcards(rows); // local\r\n      setDeck(rows);\r\n      setCurrent(0);\r\n      setFlipped(false);\r\n      // optional: also push to DB if you added the bulkUpsert route\r\n      fetch(\"/api/flashcards/bulkUpsert\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ deckId: \"default\", records: rows }),\r\n      }).catch(() => {});\r\n    };\r\n    reader.readAsText(f);\r\n  }\r\n\r\n  // Shuffle deck (disabled while running)\r\n  function shuffleDeck() {\r\n    if (running || deck.length < 2) return;\r\n    const arr = deck.slice();\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    setDeck(arr);\r\n    setCurrent(0);\r\n    setFlipped(false);\r\n  }\r\n\r\n  // Space flips card\r\n  useEffect(() => {\r\n    function onKey(e: KeyboardEvent) {\r\n      if (e.code === \"Space\") {\r\n        e.preventDefault();\r\n        setFlipped((f) => !f);\r\n      }\r\n    }\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, []);\r\n\r\n  return (\r\n    <main style={{ maxWidth: 1000, margin: \"0 auto\", padding: 24 }}>\r\n      <h1 style={{ fontSize: 24, marginBottom: 10 }}>SAFMEDS</h1>\r\n      <p style={{ color: \"#555\" }}>\r\n        One-minute timing. Use the same <code>term,def</code> CSV as Flashcards. Click the card (or press Space) to flip.\r\n      </p>\r\n\r\n      <div style={{ display: \"flex\", gap: 10, flexWrap: \"wrap\" }}>\r\n        <label style={importBtn}>\r\n          Import CSV\r\n          <input type=\"file\" accept=\".csv\" onChange={onCSVUpload} style={{ display: \"none\" }} />\r\n        </label>\r\n\r\n        <button onClick={shuffleDeck} style={ghostBtn} disabled={running || deck.length < 2}>\r\n          Shuffle Deck\r\n        </button>\r\n      </div>\r\n\r\n      <section style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16, marginTop: 16 }}>\r\n        {/* LEFT: Timer + Card + Buttons */}\r\n        <div style={panel}>\r\n          <div style={{ fontSize: 48, fontWeight: 800, textAlign: \"center\" }}>{secs}s</div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10, marginTop: 12 }}>\r\n            {!running ? (\r\n              <button onClick={startTrial} style={primaryBtn}>Start</button>\r\n            ) : (\r\n              <button onClick={() => stopTrial(false)} style={dangerBtn}>Stop</button>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 16, marginTop: 16 }}>\r\n            <Stat label=\"Correct\" value={correct} />\r\n            <Stat label=\"Errors\" value={errors} />\r\n            <Stat label=\"Accuracy\" value={`${accuracy}%`} />\r\n          </div>\r\n\r\n          {/* Flip Card */}\r\n          <div\r\n            onClick={() => setFlipped((f) => !f)}\r\n            style={{\r\n              marginTop: 16,\r\n              background: \"white\",\r\n              border: \"1px solid #e5e7eb\",\r\n              borderRadius: 14,\r\n              padding: 24,\r\n              minHeight: 140,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              gap: 8,\r\n              cursor: \"pointer\",\r\n              boxShadow: \"0 8px 18px rgba(0,0,0,0.06)\",\r\n              transition: \"transform 0.15s\",\r\n            }}\r\n            title=\"Click to flip\"\r\n          >\r\n            {!card ? (\r\n              <div style={{ color: \"#666\" }}>Import a deck to begin</div>\r\n            ) : !flipped ? (\r\n              <>\r\n                <div style={{ fontWeight: 700, color: \"#666\" }}>Term</div>\r\n                <div style={{ fontSize: 22 }}>{card.term}</div>\r\n                <Hint />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div style={{ fontWeight: 700, color: \"#666\" }}>Definition</div>\r\n                <div style={{ color: \"#333\" }}>{card.def}</div>\r\n                <Hint flipped />\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", gap: 10, marginTop: 12 }}>\r\n            <button onClick={markCorrect} style={okBtn} disabled={!running}>\r\n              Mark Correct\r\n            </button>\r\n            <button onClick={markError} style={warnBtn} disabled={!running}>\r\n              Mark Error\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RIGHT: History + Chart */}\r\n        <div style={panel}>\r\n          <h3 style={{ marginTop: 0 }}>Session History</h3>\r\n          {trials.length === 0 ? (\r\n            <div style={{ color: \"#666\" }}>No trials yet.</div>\r\n          ) : (\r\n            <>\r\n              <BarChart trials={trials} />\r\n              <ul style={{ marginTop: 12, paddingLeft: 18 }}>\r\n                {trials.slice(-8).reverse().map((t, i) => (\r\n                  <li key={t.timestamp + \"_\" + i}>\r\n                    {new Date(t.timestamp).toLocaleString()} — Correct: <b>{t.correct}</b>, Errors: <b>{t.errors}</b>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction Hint({ flipped = false }: { flipped?: boolean }) {\r\n  return (\r\n    <div style={{ marginTop: 8, fontSize: 12, color: \"#888\" }}>\r\n      {flipped ? \"Click (or Space) to show Term\" : \"Click (or Space) to show Definition\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Stat({ label, value }: { label: string; value: number | string }) {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ fontSize: 12, color: \"#666\" }}>{label}</div>\r\n      <div style={{ fontSize: 20, fontWeight: 700 }}>{value}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BarChart({ trials }: { trials: SafMedsTrial[] }) {\r\n  const last = trials.slice(-12);\r\n  const max = Math.max(1, ...last.map((t) => t.correct));\r\n  const w = 480, h = 160, pad = 24;\r\n  const barW = (w - pad * 2) / (last.length || 1);\r\n\r\n  return (\r\n    <svg width={w} height={h} style={{ background: \"#fafafa\", borderRadius: 8, border: \"1px solid #eee\" }}>\r\n      <line x1={pad} y1={h - pad} x2={w - pad} y2={h - pad} stroke=\"#ccc\" />\r\n      <line x1={pad} y1={pad} x2={pad} y2={h - pad} stroke=\"#ccc\" />\r\n      {last.map((t, i) => {\r\n        const x = pad + i * barW + 6;\r\n        const bh = ((t.correct / max) * (h - pad * 2)) | 0;\r\n        const y = h - pad - bh;\r\n        return <rect key={t.timestamp + \"_\" + i} x={x} y={y} width={barW - 12} height={bh} fill=\"#0b3d91\" />;\r\n      })}\r\n      <text x={pad} y={pad - 6} fontSize=\"10\" fill=\"#555\">max {max}</text>\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst panel: React.CSSProperties = {\r\n  background: \"white\",\r\n  border: \"1px solid #e5e7eb\",\r\n  borderRadius: 14,\r\n  padding: 16,\r\n  boxShadow: \"0 6px 14px rgba(0,0,0,0.06)\",\r\n  minHeight: 260,\r\n};\r\n\r\nconst importBtn: React.CSSProperties = {\r\n  display: \"inline-block\",\r\n  padding: \"10px 14px\",\r\n  background: \"#0b3d91\",\r\n  color: \"white\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst ghostBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"white\",\r\n  color: \"#0b3d91\",\r\n  border: \"1px solid #0b3d91\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst primaryBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"#0b3d91\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst dangerBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"#d64545\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst okBtn: React.CSSProperties = {\r\n  padding: \"8px 12px\",\r\n  background: \"#2bb673\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst warnBtn: React.CSSProperties = {\r\n  padding: \"8px 12px\",\r\n  background: \"#ffae42\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;;AACpB;AACA;;;;AASe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAc,EAAE;IAChD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAC;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,+GAAQ,EAAC;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,+GAAQ,EAAiB,EAAE;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IAEvC,kDAAkD;IAClD,MAAM,aAAa,IAAA,6GAAM,EAAC;IAC1B,MAAM,YAAY,IAAA,6GAAM,EAAC;IACzB,MAAM,cAAc,IAAA,6GAAM,EAAC;IAC3B,MAAM,WAAW,IAAA,6GAAM,EAAwB;IAE/C,mDAAmD;IACnD,IAAA,gHAAS,EAAC;QACR,IAAI,YAAY;QAEhB,eAAe;YACb,qBAAqB;YACrB,IAAI;gBACF,MAAM,KAAK,MAAM,MAAM,uCAAuC,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;gBAChF,IAAI,CAAC,aAAa,MAAM,OAAO,CAAC,GAAG,OAAO,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE;oBAChE,QAAQ,GAAG,OAAO;gBACpB,OAAO,IAAI,CAAC,WAAW;oBACrB,QAAQ,IAAA,yHAAc;gBACxB;YACF,EAAE,OAAM;gBACN,IAAI,CAAC,WAAW,QAAQ,IAAA,yHAAc;YACxC;YAEA,iBAAiB;YACjB,IAAI;gBACF,MAAM,KAAK,MAAM,MAAM,0CAA0C,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;gBACnF,IAAI,CAAC,aAAa,MAAM,OAAO,CAAC,GAAG,OAAO,GAAG;oBAC3C,MAAM,SAAyB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAW,CAAC;4BACzD,WAAW,OAAO,EAAE,YAAY;4BAChC,SAAS,OAAO,EAAE,OAAO;4BACzB,QAAQ,OAAO,EAAE,MAAM;4BACvB,MAAM,OAAO,EAAE,IAAI;wBACrB,CAAC;oBACD,UAAU;gBACZ,OAAO,IAAI,CAAC,WAAW;oBACrB,UAAU,IAAA,4HAAiB;gBAC7B;YACF,EAAE,OAAM;gBACN,IAAI,CAAC,WAAW,UAAU,IAAA,4HAAiB;YAC7C;QACF;QAEA;QACA,OAAO;YACL,YAAY;QACd;IACF,GAAG,EAAE;IAEL,0BAA0B;IAC1B,IAAA,gHAAS,EAAC;QACR,WAAW,OAAO,GAAG;IACvB,GAAG;QAAC;KAAQ;IACZ,IAAA,gHAAS,EAAC;QACR,UAAU,OAAO,GAAG;IACtB,GAAG;QAAC;KAAO;IAEX,QAAQ;IACR,IAAA,gHAAS,EAAC;QACR,IAAI,CAAC,SAAS;QACd,SAAS,OAAO,GAAG,YAAY;YAC7B,QAAQ,CAAC;gBACP,IAAI,KAAK,GAAG;oBACV,UAAU,OAAO,iBAAiB;oBAClC,OAAO;gBACT;gBACA,OAAO,IAAI;YACb;QACF,GAAG;QACH,OAAO;YACL,IAAI,SAAS,OAAO,EAAE,cAAc,SAAS,OAAO;QACtD;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,OAAO,IAAI,CAAC,QAAQ;IAE1B,SAAS;QACP,WAAW;QACX,UAAU;QACV,WAAW,OAAO,GAAG;QACrB,UAAU,OAAO,GAAG;QACpB,YAAY,OAAO,GAAG;QAEtB,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IAEA,SAAS,UAAU,OAAO,KAAK;QAC7B,IAAI,YAAY,OAAO,EAAE;QACzB,YAAY,OAAO,GAAG;QAEtB,WAAW;QACX,IAAI,SAAS,OAAO,EAAE,cAAc,SAAS,OAAO;QAEpD,wBAAwB;QACxB,MAAM,MAAoB;YACxB,WAAW,KAAK,GAAG;YACnB,SAAS,WAAW,OAAO;YAC3B,QAAQ,UAAU,OAAO;YACzB,MAAM;QACR;QACA,MAAM,OAAO;eAAI;YAAQ;SAAI;QAC7B,UAAU;QACV,IAAA,4HAAiB,EAAC;QAElB,+BAA+B;QAC/B,MAAM,yBAAyB;YAC7B,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,QAAQ;gBACR,cAAc,IAAI,SAAS;gBAC3B,SAAS,IAAI,OAAO;gBACpB,QAAQ,IAAI,MAAM;gBAClB,MAAM,IAAI,IAAI;YAChB;QACF,GAAG,KAAK,CAAC,KAAO;IAEhB,4DAA4D;IAC9D;IAEA,MAAM,WAAW,IAAA,8GAAO,EAAC;QACvB,MAAM,QAAQ,UAAU;QACxB,OAAO,UAAU,IAAI,IAAI,KAAK,KAAK,CAAC,AAAC,UAAU,QAAS;IAC1D,GAAG;QAAC;QAAS;KAAO;IAEpB,SAAS;QACP,IAAI,CAAC,KAAK,MAAM,EAAE;QAClB,WAAW,CAAC,IAAM,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM;QACvC,WAAW,QAAQ,yBAAyB;IAC9C;IAEA,qEAAqE;IACrE,SAAS;QACP,IAAI,CAAC,SAAS;QACd,WAAW,CAAC;YACV,MAAM,IAAI,IAAI;YACd,WAAW,OAAO,GAAG;YACrB,OAAO;QACT;QACA;IACF;IAEA,SAAS;QACP,IAAI,CAAC,SAAS;QACd,UAAU,CAAC;YACT,MAAM,IAAI,IAAI;YACd,UAAU,OAAO,GAAG;YACpB,OAAO;QACT;QACA;IACF;IAEA,SAAS,YAAY,CAAsC;QACzD,MAAM,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAC7B,IAAI,CAAC,GAAG;QACR,MAAM,SAAS,IAAI;QACnB,OAAO,MAAM,GAAG;YACd,MAAM,MAAM,OAAO,OAAO,MAAM,IAAI;YACpC,MAAM,QAAQ,IAAI,KAAK,CAAC,SAAS,MAAM,CAAC;YACxC,MAAM,OAAoB,EAAE;YAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;gBACrC,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC7B,IAAI,MAAM,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;gBACvC,IAAI,MAAM,MAAM,IAAI,GAAG,KAAK,IAAI,CAAC;oBAAE,MAAM,KAAK,CAAC,EAAE,CAAC,IAAI;oBAAI,KAAK,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI;gBAAG;YACjG;YACA,IAAA,yHAAc,EAAC,OAAO,QAAQ;YAC9B,QAAQ;YACR,WAAW;YACX,WAAW;YACX,8DAA8D;YAC9D,MAAM,8BAA8B;gBAClC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,QAAQ;oBAAW,SAAS;gBAAK;YAC1D,GAAG,KAAK,CAAC,KAAO;QAClB;QACA,OAAO,UAAU,CAAC;IACpB;IAEA,wCAAwC;IACxC,SAAS;QACP,IAAI,WAAW,KAAK,MAAM,GAAG,GAAG;QAChC,MAAM,MAAM,KAAK,KAAK;QACtB,IAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;YACvC,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC;YAC3C,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG;gBAAC,GAAG,CAAC,EAAE;gBAAE,GAAG,CAAC,EAAE;aAAC;QACrC;QACA,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IAEA,mBAAmB;IACnB,IAAA,gHAAS,EAAC;QACR,SAAS,MAAM,CAAgB;YAC7B,IAAI,EAAE,IAAI,KAAK,SAAS;gBACtB,EAAE,cAAc;gBAChB,WAAW,CAAC,IAAM,CAAC;YACrB;QACF;QACA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;IACrD,GAAG,EAAE;IAEL,qBACE,qKAAC;QAAK,OAAO;YAAE,UAAU;YAAM,QAAQ;YAAU,SAAS;QAAG;;0BAC3D,qKAAC;gBAAG,OAAO;oBAAE,UAAU;oBAAI,cAAc;gBAAG;0BAAG;;;;;;0BAC/C,qKAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAO;;oBAAG;kCACK,qKAAC;kCAAK;;;;;;oBAAe;;;;;;;0BAGvD,qKAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,KAAK;oBAAI,UAAU;gBAAO;;kCACvD,qKAAC;wBAAM,OAAO;;4BAAW;0CAEvB,qKAAC;gCAAM,MAAK;gCAAO,QAAO;gCAAO,UAAU;gCAAa,OAAO;oCAAE,SAAS;gCAAO;;;;;;;;;;;;kCAGnF,qKAAC;wBAAO,SAAS;wBAAa,OAAO;wBAAU,UAAU,WAAW,KAAK,MAAM,GAAG;kCAAG;;;;;;;;;;;;0BAKvF,qKAAC;gBAAQ,OAAO;oBAAE,SAAS;oBAAQ,qBAAqB;oBAAW,KAAK;oBAAI,WAAW;gBAAG;;kCAExF,qKAAC;wBAAI,OAAO;;0CACV,qKAAC;gCAAI,OAAO;oCAAE,UAAU;oCAAI,YAAY;oCAAK,WAAW;gCAAS;;oCAAI;oCAAK;;;;;;;0CAE1E,qKAAC;gCAAI,OAAO;oCAAE,SAAS;oCAAQ,gBAAgB;oCAAU,KAAK;oCAAI,WAAW;gCAAG;0CAC7E,CAAC,wBACA,qKAAC;oCAAO,SAAS;oCAAY,OAAO;8CAAY;;;;;yDAEhD,qKAAC;oCAAO,SAAS,IAAM,UAAU;oCAAQ,OAAO;8CAAW;;;;;;;;;;;0CAI/D,qKAAC;gCAAI,OAAO;oCAAE,SAAS;oCAAQ,gBAAgB;oCAAU,KAAK;oCAAI,WAAW;gCAAG;;kDAC9E,qKAAC;wCAAK,OAAM;wCAAU,OAAO;;;;;;kDAC7B,qKAAC;wCAAK,OAAM;wCAAS,OAAO;;;;;;kDAC5B,qKAAC;wCAAK,OAAM;wCAAW,OAAO,GAAG,SAAS,CAAC,CAAC;;;;;;;;;;;;0CAI9C,qKAAC;gCACC,SAAS,IAAM,WAAW,CAAC,IAAM,CAAC;gCAClC,OAAO;oCACL,WAAW;oCACX,YAAY;oCACZ,QAAQ;oCACR,cAAc;oCACd,SAAS;oCACT,WAAW;oCACX,SAAS;oCACT,eAAe;oCACf,gBAAgB;oCAChB,KAAK;oCACL,QAAQ;oCACR,WAAW;oCACX,YAAY;gCACd;gCACA,OAAM;0CAEL,CAAC,qBACA,qKAAC;oCAAI,OAAO;wCAAE,OAAO;oCAAO;8CAAG;;;;;2CAC7B,CAAC,wBACH;;sDACE,qKAAC;4CAAI,OAAO;gDAAE,YAAY;gDAAK,OAAO;4CAAO;sDAAG;;;;;;sDAChD,qKAAC;4CAAI,OAAO;gDAAE,UAAU;4CAAG;sDAAI,KAAK,IAAI;;;;;;sDACxC,qKAAC;;;;;;iEAGH;;sDACE,qKAAC;4CAAI,OAAO;gDAAE,YAAY;gDAAK,OAAO;4CAAO;sDAAG;;;;;;sDAChD,qKAAC;4CAAI,OAAO;gDAAE,OAAO;4CAAO;sDAAI,KAAK,GAAG;;;;;;sDACxC,qKAAC;4CAAK,OAAO;;;;;;;;;;;;;0CAKnB,qKAAC;gCAAI,OAAO;oCAAE,SAAS;oCAAQ,KAAK;oCAAI,WAAW;gCAAG;;kDACpD,qKAAC;wCAAO,SAAS;wCAAa,OAAO;wCAAO,UAAU,CAAC;kDAAS;;;;;;kDAGhE,qKAAC;wCAAO,SAAS;wCAAW,OAAO;wCAAS,UAAU,CAAC;kDAAS;;;;;;;;;;;;;;;;;;kCAOpE,qKAAC;wBAAI,OAAO;;0CACV,qKAAC;gCAAG,OAAO;oCAAE,WAAW;gCAAE;0CAAG;;;;;;4BAC5B,OAAO,MAAM,KAAK,kBACjB,qKAAC;gCAAI,OAAO;oCAAE,OAAO;gCAAO;0CAAG;;;;;qDAE/B;;kDACE,qKAAC;wCAAS,QAAQ;;;;;;kDAClB,qKAAC;wCAAG,OAAO;4CAAE,WAAW;4CAAI,aAAa;wCAAG;kDACzC,OAAO,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,kBAClC,qKAAC;;oDACE,IAAI,KAAK,EAAE,SAAS,EAAE,cAAc;oDAAG;kEAAY,qKAAC;kEAAG,EAAE,OAAO;;;;;;oDAAK;kEAAU,qKAAC;kEAAG,EAAE,MAAM;;;;;;;+CADrF,EAAE,SAAS,GAAG,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW/C;AAEA,SAAS,KAAK,EAAE,UAAU,KAAK,EAAyB;IACtD,qBACE,qKAAC;QAAI,OAAO;YAAE,WAAW;YAAG,UAAU;YAAI,OAAO;QAAO;kBACrD,UAAU,kCAAkC;;;;;;AAGnD;AAEA,SAAS,KAAK,EAAE,KAAK,EAAE,KAAK,EAA6C;IACvE,qBACE,qKAAC;QAAI,OAAO;YAAE,WAAW;QAAS;;0BAChC,qKAAC;gBAAI,OAAO;oBAAE,UAAU;oBAAI,OAAO;gBAAO;0BAAI;;;;;;0BAC9C,qKAAC;gBAAI,OAAO;oBAAE,UAAU;oBAAI,YAAY;gBAAI;0BAAI;;;;;;;;;;;;AAGtD;AAEA,SAAS,SAAS,EAAE,MAAM,EAA8B;IACtD,MAAM,OAAO,OAAO,KAAK,CAAC,CAAC;IAC3B,MAAM,MAAM,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,OAAO;IACpD,MAAM,IAAI,KAAK,IAAI,KAAK,MAAM;IAC9B,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC;IAE9C,qBACE,qKAAC;QAAI,OAAO;QAAG,QAAQ;QAAG,OAAO;YAAE,YAAY;YAAW,cAAc;YAAG,QAAQ;QAAiB;;0BAClG,qKAAC;gBAAK,IAAI;gBAAK,IAAI,IAAI;gBAAK,IAAI,IAAI;gBAAK,IAAI,IAAI;gBAAK,QAAO;;;;;;0BAC7D,qKAAC;gBAAK,IAAI;gBAAK,IAAI;gBAAK,IAAI;gBAAK,IAAI,IAAI;gBAAK,QAAO;;;;;;YACpD,KAAK,GAAG,CAAC,CAAC,GAAG;gBACZ,MAAM,IAAI,MAAM,IAAI,OAAO;gBAC3B,MAAM,KAAK,AAAE,EAAE,OAAO,GAAG,MAAO,CAAC,IAAI,MAAM,CAAC,IAAK;gBACjD,MAAM,IAAI,IAAI,MAAM;gBACpB,qBAAO,qKAAC;oBAAiC,GAAG;oBAAG,GAAG;oBAAG,OAAO,OAAO;oBAAI,QAAQ;oBAAI,MAAK;mBAAtE,EAAE,SAAS,GAAG,MAAM;;;;;YACxC;0BACA,qKAAC;gBAAK,GAAG;gBAAK,GAAG,MAAM;gBAAG,UAAS;gBAAK,MAAK;;oBAAO;oBAAK;;;;;;;;;;;;;AAG/D;AAEA,MAAM,QAA6B;IACjC,YAAY;IACZ,QAAQ;IACR,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;AACb;AAEA,MAAM,YAAiC;IACrC,SAAS;IACT,SAAS;IACT,YAAY;IACZ,OAAO;IACP,cAAc;IACd,QAAQ;AACV;AAEA,MAAM,WAAgC;IACpC,SAAS;IACT,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,cAAc;IACd,QAAQ;AACV;AAEA,MAAM,aAAkC;IACtC,SAAS;IACT,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,cAAc;IACd,QAAQ;AACV;AAEA,MAAM,YAAiC;IACrC,SAAS;IACT,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,cAAc;IACd,QAAQ;AACV;AAEA,MAAM,QAA6B;IACjC,SAAS;IACT,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,cAAc;IACd,QAAQ;AACV;AAEA,MAAM,UAA+B;IACnC,SAAS;IACT,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,cAAc;IACd,QAAQ;AACV","debugId":null}}]
}