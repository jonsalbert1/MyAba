{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/pages/dashboard.tsx"],"sourcesContent":["// pages/dashboard.tsx\r\nimport { useEffect, useMemo, useState } from \"react\";\r\n\r\n/** ----- Expected localStorage keys & shapes -----\r\n * Flashcards deck:  localStorage[\"flashcards:deck\"] => Array<{ term: string; def: string }>\r\n * SAFMEDS deck:     localStorage[\"safmeds:deck\"]    => Array<{ term: string; def: string }>\r\n * Quiz deck:        localStorage[\"quiz:deck\"]       => Array<any>\r\n *\r\n * SAFMEDS sessions: localStorage[\"safmeds:sessions\"] => Array<{\r\n *   startedAt: string;  // ISO\r\n *   endedAt: string;    // ISO\r\n *   correct: number;\r\n *   incorrect: number;\r\n *   durationSec?: number;\r\n * }>\r\n *\r\n * Quiz history:     localStorage[\"quiz:history\"] => Array<{\r\n *   timestamp: string;  // ISO\r\n *   correct: number;\r\n *   total: number;\r\n * }>\r\n * ------------------------------------------------- */\r\n\r\nfunction readLS<T>(key: string, fallback: T): T {\r\n  try {\r\n    const raw = localStorage.getItem(key);\r\n    if (!raw) return fallback;\r\n    return JSON.parse(raw) as T;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n}\r\n\r\nexport default function DashboardPage() {\r\n  const [flashcardsCount, setFlashcardsCount] = useState<number>(0);\r\n  const [safmedsCount, setSafmedsCount] = useState<number>(0);\r\n  const [quizCount, setQuizCount] = useState<number>(0);\r\n\r\n  const [safmedsSessions, setSafmedsSessions] = useState<\r\n    Array<{ startedAt: string; endedAt: string; correct: number; incorrect: number; durationSec?: number }>\r\n  >([]);\r\n\r\n  const [quizHistory, setQuizHistory] = useState<\r\n    Array<{ timestamp: string; correct: number; total: number }>\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    const fc = readLS<Array<{ term: string; def: string }>>(\"flashcards:deck\", []);\r\n    setFlashcardsCount(Array.isArray(fc) ? fc.length : 0);\r\n\r\n    const sm = readLS<Array<{ term: string; def: string }>>(\"safmeds:deck\", []);\r\n    setSafmedsCount(Array.isArray(sm) ? sm.length : 0);\r\n\r\n    const qd = readLS<any[]>(\"quiz:deck\", []);\r\n    setQuizCount(Array.isArray(qd) ? qd.length : 0);\r\n\r\n    setSafmedsSessions(readLS(\"safmeds:sessions\", []));\r\n    setQuizHistory(readLS(\"quiz:history\", []));\r\n  }, []);\r\n\r\n  const last5Safmeds = useMemo(\r\n    () => [...safmedsSessions].slice(-5).reverse(),\r\n    [safmedsSessions]\r\n  );\r\n  const last10Quiz = useMemo(\r\n    () => [...quizHistory].slice(-10).reverse(),\r\n    [quizHistory]\r\n  );\r\n\r\n  const safmedsAvgAcc = useMemo(() => {\r\n    if (safmedsSessions.length === 0) return 0;\r\n    const totals = safmedsSessions.reduce(\r\n      (acc, s) => {\r\n        const t = s.correct + s.incorrect;\r\n        return { correct: acc.correct + s.correct, total: acc.total + t };\r\n      },\r\n      { correct: 0, total: 0 }\r\n    );\r\n    return totals.total ? Math.round((totals.correct / totals.total) * 100) : 0;\r\n  }, [safmedsSessions]);\r\n\r\n  const quizAvgAcc = useMemo(() => {\r\n    if (quizHistory.length === 0) return 0;\r\n    const totals = quizHistory.reduce(\r\n      (acc, q) => ({ correct: acc.correct + q.correct, total: acc.total + q.total }),\r\n      { correct: 0, total: 0 }\r\n    );\r\n    return totals.total ? Math.round((totals.correct / totals.total) * 100) : 0;\r\n  }, [quizHistory]);\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-gray-50\">\r\n      {/* Title */}\r\n      <section className=\"mx-auto max-w-5xl px-6 pt-6\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Dashboard</h1>\r\n        <p className=\"mt-1 text-sm text-gray-600\">\r\n          Overview of decks and recent study activity.\r\n        </p>\r\n      </section>\r\n\r\n      <section className=\"mx-auto max-w-5xl px-6 py-6 grid gap-6\">\r\n        {/* Deck sizes */}\r\n        <div className=\"grid gap-4 sm:grid-cols-3\">\r\n          <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n            <p className=\"text-sm text-gray-500\">Flashcards</p>\r\n            <p className=\"mt-1 text-2xl font-bold\">{flashcardsCount}</p>\r\n          </div>\r\n          <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n            <p className=\"text-sm text-gray-500\">SAFMEDS</p>\r\n            <p className=\"mt-1 text-2xl font-bold\">{safmedsCount}</p>\r\n          </div>\r\n          <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n            <p className=\"text-sm text-gray-500\">Quiz</p>\r\n            <p className=\"mt-1 text-2xl font-bold\">{quizCount}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Averages */}\r\n        <div className=\"grid gap-4 sm:grid-cols-2\">\r\n          <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n            <p className=\"text-sm text-gray-500\">SAFMEDS Average Accuracy</p>\r\n            <div className=\"mt-2 h-2 w-full rounded-full bg-gray-200\">\r\n              <div className=\"h-full rounded-full bg-blue-600\" style={{ width: `${safmedsAvgAcc}%` }} />\r\n            </div>\r\n            <p className=\"mt-2 text-sm text-gray-700\">{safmedsAvgAcc}%</p>\r\n          </div>\r\n\r\n          <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n            <p className=\"text-sm text-gray-500\">Quiz Average Accuracy</p>\r\n            <div className=\"mt-2 h-2 w-full rounded-full bg-gray-200\">\r\n              <div className=\"h-full rounded-full bg-blue-600\" style={{ width: `${quizAvgAcc}%` }} />\r\n            </div>\r\n            <p className=\"mt-2 text-sm text-gray-700\">{quizAvgAcc}%</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent SAFMEDS sessions */}\r\n        <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n          <div className=\"mb-3 flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Recent SAFMEDS Sessions</h2>\r\n            <p className=\"text-sm text-gray-500\">Showing {last5Safmeds.length || 0} most recent</p>\r\n          </div>\r\n\r\n          {last5Safmeds.length === 0 ? (\r\n            <p className=\"text-sm text-gray-600\">\r\n              No SAFMEDS sessions yet. After a timing, save a record to{\" \"}\r\n              <code className=\"rounded bg-gray-100 px-1 py-0.5\">localStorage[\"safmeds:sessions\"]</code>.\r\n            </p>\r\n          ) : (\r\n            <ul className=\"grid gap-3\">\r\n              {last5Safmeds.map((s, i) => {\r\n                const total = s.correct + s.incorrect;\r\n                const acc = total ? Math.round((s.correct / total) * 100) : 0;\r\n                const label = new Date(s.endedAt || s.startedAt).toLocaleString();\r\n                return (\r\n                  <li key={i} className=\"rounded-xl border px-4 py-3\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-800\">{label}</p>\r\n                        <p className=\"text-xs text-gray-500\">\r\n                          {s.correct} correct / {total} total\r\n                          {typeof s.durationSec === \"number\" ? ` · ${s.durationSec}s` : \"\"}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"w-40\">\r\n                        <div className=\"h-2 w-full rounded-full bg-gray-200\">\r\n                          <div\r\n                            className=\"h-full rounded-full bg-blue-600\"\r\n                            style={{ width: `${acc}%` }}\r\n                          />\r\n                        </div>\r\n                        <p className=\"mt-1 text-right text-xs text-gray-600\">{acc}%</p>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Recent Quiz results */}\r\n        <div className=\"rounded-2xl bg-white p-5 shadow-sm\">\r\n          <div className=\"mb-3 flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Recent Quiz Results</h2>\r\n            <p className=\"text-sm text-gray-500\">Showing {last10Quiz.length || 0} most recent</p>\r\n          </div>\r\n\r\n          {last10Quiz.length === 0 ? (\r\n            <p className=\"text-sm text-gray-600\">\r\n              No quiz results yet. Save attempts to{\" \"}\r\n              <code className=\"rounded bg-gray-100 px-1 py-0.5\">localStorage[\"quiz:history\"]</code>.\r\n            </p>\r\n          ) : (\r\n            <ul className=\"grid gap-3\">\r\n              {last10Quiz.map((q, i) => {\r\n                const pct = q.total ? Math.round((q.correct / q.total) * 100) : 0;\r\n                const when = new Date(q.timestamp).toLocaleString();\r\n                return (\r\n                  <li key={i} className=\"rounded-xl border px-4 py-3\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-800\">{when}</p>\r\n                        <p className=\"text-xs text-gray-500\">\r\n                          {q.correct} / {q.total}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"w-40\">\r\n                        <div className=\"h-2 w-full rounded-full bg-gray-200\">\r\n                          <div\r\n                            className=\"h-full rounded-full bg-blue-600\"\r\n                            style={{ width: `${pct}%` }}\r\n                          />\r\n                        </div>\r\n                        <p className=\"mt-1 text-right text-xs text-gray-600\">{pct}%</p>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/dashboard\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}