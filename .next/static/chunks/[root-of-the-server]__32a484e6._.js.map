{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/lib/storage.ts"],"sourcesContent":["// lib/storage.ts\r\nexport type FlashCard = { term: string; def: string };\r\nexport type QuizItem = {\r\n  domain?: string;\r\n  question: string;\r\n  a: string;\r\n  b: string;\r\n  c: string;\r\n  d: string;\r\n  answer: \"A\" | \"B\" | \"C\" | \"D\";\r\n  rationale?: string;\r\n};\r\n\r\nconst safe = <T,>(key: string, fallback: T): T => {\r\n  if (typeof window === \"undefined\") return fallback;\r\n  try {\r\n    const raw = localStorage.getItem(key);\r\n    return raw ? (JSON.parse(raw) as T) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n};\r\n\r\nexport const loadFlashcards = () => safe<FlashCard[]>(\"safmeds:deck\", []);\r\nexport const saveFlashcards = (arr: FlashCard[]) =>\r\n  localStorage.setItem(\"safmeds:deck\", JSON.stringify(arr));\r\n\r\nexport const loadQuiz = () => safe<QuizItem[]>(\"quiz:deck\", []);\r\nexport const saveQuiz = (arr: QuizItem[]) =>\r\n  localStorage.setItem(\"quiz:deck\", JSON.stringify(arr));\r\n\r\nexport type SafMedsTrial = { timestamp: number; correct: number; errors: number; secs: number };\r\nexport const loadSafMedsTrials = () => safe<SafMedsTrial[]>(\"safmeds:trials\", []);\r\nexport const saveSafMedsTrials = (arr: SafMedsTrial[]) =>\r\n  localStorage.setItem(\"safmeds:trials\", JSON.stringify(arr));\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;;;;;;;;;;AAajB,MAAM,OAAO,CAAK,KAAa;IAC7B;;IACA,IAAI;QACF,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,OAAO,MAAO,KAAK,KAAK,CAAC,OAAa;IACxC,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,iBAAiB,IAAM,KAAkB,gBAAgB,EAAE;AACjE,MAAM,iBAAiB,CAAC,MAC7B,aAAa,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;AAE/C,MAAM,WAAW,IAAM,KAAiB,aAAa,EAAE;AACvD,MAAM,WAAW,CAAC,MACvB,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;AAG5C,MAAM,oBAAoB,IAAM,KAAqB,kBAAkB,EAAE;AACzE,MAAM,oBAAoB,CAAC,MAChC,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/pages/quiz.tsx"],"sourcesContent":["// pages/quiz.tsx\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { QuizItem, loadQuiz, saveQuiz } from \"../lib/storage\";\r\n\r\ntype State = {\r\n  current: number;\r\n  selected?: \"A\" | \"B\" | \"C\" | \"D\";\r\n  locked: boolean;\r\n};\r\n\r\nconst DECK_ID = \"default\";\r\n\r\nexport default function QuizPage() {\r\n  const [deck, setDeck] = useState<QuizItem[]>([]);\r\n  const [s, setS] = useState<State>({ current: 0, locked: false });\r\n  const [status, setStatus] = useState<string | null>(null);\r\n\r\n  // ---------- Helpers ----------\r\n  async function fetchJSON(url: string, init?: RequestInit) {\r\n    const res = await fetch(url, init);\r\n    const text = await res.text(); // read as text first (helps surface HTML errors)\r\n    let json: any = null;\r\n    try {\r\n      json = JSON.parse(text);\r\n    } catch {\r\n      // Surface status + HTML snippet if server returned a page (e.g., 404 or stacktrace)\r\n      throw new Error(`HTTP ${res.status}: ${text.slice(0, 200)}`);\r\n    }\r\n    if (!res.ok) {\r\n      throw new Error(json?.error || `HTTP ${res.status}`);\r\n    }\r\n    return json;\r\n  }\r\n\r\n  async function hydrateFromDB() {\r\n    setStatus(\"Loading quiz from database…\");\r\n    try {\r\n      const json = await fetchJSON(`/api/quiz/list?deckId=${encodeURIComponent(DECK_ID)}`);\r\n      if (Array.isArray(json.records) && json.records.length) {\r\n        setDeck(json.records);\r\n        setS({ current: 0, locked: false, selected: undefined });\r\n        setStatus(`Loaded ${json.records.length} items from DB`);\r\n        return;\r\n      }\r\n      // Fallback to local if DB is empty\r\n      const local = loadQuiz();\r\n      setDeck(local);\r\n      setStatus(local.length ? `Loaded ${local.length} items from local` : \"No quiz items yet\");\r\n    } catch (e: any) {\r\n      const local = loadQuiz();\r\n      setDeck(local);\r\n      setStatus(`DB load failed (${e?.message || \"error\"}), loaded from local`);\r\n    }\r\n  }\r\n\r\n  // ---------- Effects ----------\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    (async () => {\r\n      if (!cancelled) await hydrateFromDB();\r\n    })();\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // ---------- CSV Import ----------\r\n  function onCSVUpload(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const f = e.target.files?.[0];\r\n    if (!f) return;\r\n    setStatus(\"Parsing CSV…\");\r\n    const reader = new FileReader();\r\n    reader.onload = async () => {\r\n      const txt = String(reader.result || \"\");\r\n      // CSV headers: domain,question,a,b,c,d,answer,rationale\r\n      const lines = txt.split(/\\r?\\n/).filter(Boolean);\r\n      const rows: QuizItem[] = [];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const cols = parseCSVLine(lines[i]); // handles quoted commas\r\n        if (i === 0 && /question/i.test(cols[1] || \"\")) continue; // skip header row\r\n        if (cols.length >= 7) {\r\n          rows.push({\r\n            domain: cols[0]?.trim(),\r\n            question: cols[1]?.trim(),\r\n            a: cols[2]?.trim(),\r\n            b: cols[3]?.trim(),\r\n            c: cols[4]?.trim(),\r\n            d: cols[5]?.trim(),\r\n            answer: (cols[6]?.trim().toUpperCase() as any) || \"A\",\r\n            rationale: cols[7]?.trim(),\r\n          });\r\n        }\r\n      }\r\n\r\n      // Save locally + optimistic UI\r\n      saveQuiz(rows);\r\n      setDeck(rows);\r\n      setS({ current: 0, locked: false, selected: undefined });\r\n\r\n      // Persist to DB (robust error surfacing)\r\n      setStatus(\"Saving to database…\");\r\n      try {\r\n        const json = await fetchJSON(\"/api/quiz/bulkUpsert\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ deckId: DECK_ID, records: rows }),\r\n        });\r\n        setStatus(`Saved ${json.count ?? rows.length} items to DB`);\r\n      } catch (err: any) {\r\n        setStatus(`Save to DB failed: ${err?.message || \"unknown error\"}`);\r\n      }\r\n    };\r\n    reader.readAsText(f);\r\n  }\r\n\r\n  // ---------- Quiz Logic ----------\r\n  const q = deck[s.current];\r\n\r\n  const options = useMemo(\r\n    () =>\r\n      q\r\n        ? ([\r\n            [\"A\", q.a],\r\n            [\"B\", q.b],\r\n            [\"C\", q.c],\r\n            [\"D\", q.d],\r\n          ] as const)\r\n        : [],\r\n    [q]\r\n  );\r\n\r\n  function choose(letter: \"A\" | \"B\" | \"C\" | \"D\") {\r\n    if (!q || s.locked) return;\r\n    setS((old) => ({ ...old, selected: letter, locked: true }));\r\n  }\r\n\r\n  function next() {\r\n    setS((old) => ({\r\n      current: deck.length ? (old.current + 1) % deck.length : 0,\r\n      selected: undefined,\r\n      locked: false,\r\n    }));\r\n  }\r\n\r\n  // ---------- UI ----------\r\n  return (\r\n    <main style={{ maxWidth: 900, margin: \"0 auto\", padding: 24 }}>\r\n      <h1 style={{ fontSize: 24, marginBottom: 6 }}>Quiz</h1>\r\n      <p style={{ color: \"#555\", marginBottom: 10 }}>\r\n        Import CSV with headers: <code>domain,question,a,b,c,d,answer,rationale</code>\r\n      </p>\r\n\r\n      <div style={{ display: \"flex\", gap: 10, flexWrap: \"wrap\" }}>\r\n        <label style={importBtn}>\r\n          Import CSV\r\n          <input type=\"file\" accept=\".csv\" onChange={onCSVUpload} style={{ display: \"none\" }} />\r\n        </label>\r\n        <button onClick={hydrateFromDB} style={ghostBtn}>Reload from DB</button>\r\n      </div>\r\n\r\n      {status && <div style={statusBox}>{status}</div>}\r\n\r\n      <div style={{ marginTop: 8, color: \"#666\" }}>\r\n        Items: {deck.length} &middot; {deck.length ? s.current + 1 : 0} / {deck.length}\r\n      </div>\r\n\r\n      {!q ? (\r\n        <div style={card}>No questions yet. Import a CSV to begin.</div>\r\n      ) : (\r\n        <section style={{ marginTop: 16 }}>\r\n          <div style={{ ...card, fontSize: 20, fontWeight: 600 }}>{q.question}</div>\r\n\r\n          <div style={{ display: \"grid\", gap: 10, marginTop: 12 }}>\r\n            {options.map(([letter, text]) => {\r\n              const isSelected = s.selected === letter;\r\n              const isCorrect = q.answer === letter;\r\n              const showColors = s.locked && (isSelected || isCorrect);\r\n              const bg = showColors ? (isCorrect ? \"#def7e5\" : isSelected ? \"#ffe3e3\" : \"#fff\") : \"#fff\";\r\n              const border = showColors\r\n                ? isCorrect\r\n                  ? \"2px solid #2bb673\"\r\n                  : isSelected\r\n                  ? \"2px solid #d64545\"\r\n                  : \"1px solid #e5e7eb\"\r\n                : \"1px solid #e5e7eb\";\r\n              return (\r\n                <button\r\n                  key={letter}\r\n                  onClick={() => choose(letter as any)}\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    padding: \"12px 14px\",\r\n                    borderRadius: 10,\r\n                    background: bg,\r\n                    border,\r\n                    cursor: s.locked ? \"default\" : \"pointer\",\r\n                  }}\r\n                >\r\n                  <strong style={{ marginRight: 8 }}>{letter}.</strong> {text}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {s.locked && q.rationale && (\r\n            <div\r\n              style={{\r\n                marginTop: 14,\r\n                padding: 12,\r\n                borderRadius: 10,\r\n                background: \"#f6f7fb\",\r\n                border: \"1px solid #e5e7eb\",\r\n                color: \"#333\",\r\n              }}\r\n            >\r\n              <div style={{ fontWeight: 700, marginBottom: 6 }}>Rationale</div>\r\n              <div>{q.rationale}</div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ marginTop: 14 }}>\r\n            <button onClick={next} style={primaryBtn}>Next</button>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\n// ---- Utils ----\r\nfunction parseCSVLine(line: string): string[] {\r\n  // tiny CSV parser for quoted fields\r\n  const out: string[] = [];\r\n  let cur = \"\";\r\n  let inQ = false;\r\n  for (let i = 0; i < line.length; i++) {\r\n    const ch = line[i];\r\n    if (ch === '\"') {\r\n      if (inQ && line[i + 1] === '\"') {\r\n        cur += '\"';\r\n        i++;\r\n      } else {\r\n        inQ = !inQ;\r\n      }\r\n    } else if (ch === \",\" && !inQ) {\r\n      out.push(cur);\r\n      cur = \"\";\r\n    } else {\r\n      cur += ch;\r\n    }\r\n  }\r\n  out.push(cur);\r\n  return out.map((s) => s.trim());\r\n}\r\n\r\n// ---- Styles ----\r\nconst card: React.CSSProperties = {\r\n  background: \"white\",\r\n  border: \"1px solid #e5e7eb\",\r\n  borderRadius: 14,\r\n  padding: 16,\r\n  boxShadow: \"0 8px 18px rgba(0,0,0,0.06)\",\r\n};\r\n\r\nconst importBtn: React.CSSProperties = {\r\n  display: \"inline-block\",\r\n  padding: \"10px 14px\",\r\n  background: \"#0b3d91\",\r\n  color: \"white\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n  marginTop: 4,\r\n};\r\n\r\nconst ghostBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"white\",\r\n  color: \"#0b3d91\",\r\n  border: \"1px solid #0b3d91\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst primaryBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"#0b3d91\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst statusBox: React.CSSProperties = {\r\n  marginTop: 10,\r\n  padding: \"8px 12px\",\r\n  borderRadius: 10,\r\n  background: \"#eef3ff\",\r\n  border: \"1px solid #d7e2ff\",\r\n  color: \"#1f3a8a\",\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/quiz\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}