{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/pages/quiz.tsx"],"sourcesContent":["// pages/quiz.tsx\r\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\r\n\r\n/** Canonical normalized quiz item */\r\ntype QuizItem = {\r\n  domain?: string;\r\n  question: string;\r\n  choices: [string, string, string, string];\r\n  /** 'A' | 'B' | 'C' | 'D' */\r\n  answer: \"A\" | \"B\" | \"C\" | \"D\";\r\n  rationale?: string;\r\n};\r\n\r\n/** Raw deck shapes we support */\r\ntype RawDeckAny =\r\n  | Array<{\r\n      domain?: string;\r\n      question: string;\r\n      a: string;\r\n      b: string;\r\n      c: string;\r\n      d: string;\r\n      answer: string; // 'A'|'B'|'C'|'D' (case-insensitive)\r\n      rationale?: string;\r\n    }>\r\n  | Array<{\r\n      domain?: string;\r\n      question: string;\r\n      choices: string[]; // >= 4\r\n      answerIndex: number; // 0..3\r\n      rationale?: string;\r\n    }>\r\n  | unknown;\r\n\r\n/** Normalize whatever is in localStorage into QuizItem[] */\r\nfunction normalizeDeck(raw: RawDeckAny): QuizItem[] {\r\n  if (!Array.isArray(raw)) return [];\r\n  const out: QuizItem[] = [];\r\n\r\n  for (const row of raw as any[]) {\r\n    // Shape 1: a/b/c/d + answer ('A'|'B'|'C'|'D')\r\n    if (\r\n      row &&\r\n      typeof row.question === \"string\" &&\r\n      typeof row.a === \"string\" &&\r\n      typeof row.b === \"string\" &&\r\n      typeof row.c === \"string\" &&\r\n      typeof row.d === \"string\" &&\r\n      typeof row.answer === \"string\"\r\n    ) {\r\n      const ans = String(row.answer).trim().toUpperCase();\r\n      const valid = [\"A\", \"B\", \"C\", \"D\"];\r\n      if (!valid.includes(ans)) continue;\r\n      out.push({\r\n        domain: row.domain ?? undefined,\r\n        question: row.question,\r\n        choices: [row.a, row.b, row.c, row.d],\r\n        answer: ans as QuizItem[\"answer\"],\r\n        rationale: row.rationale ?? \"\",\r\n      });\r\n      continue;\r\n    }\r\n\r\n    // Shape 2: choices[] + answerIndex\r\n    if (\r\n      row &&\r\n      typeof row.question === \"string\" &&\r\n      Array.isArray(row.choices) &&\r\n      row.choices.length >= 4 &&\r\n      Number.isInteger(row.answerIndex)\r\n    ) {\r\n      const choices = row.choices.slice(0, 4) as [string, string, string, string];\r\n      const idx = Math.max(0, Math.min(3, row.answerIndex));\r\n      const map = [\"A\", \"B\", \"C\", \"D\"] as const;\r\n      out.push({\r\n        domain: row.domain ?? undefined,\r\n        question: row.question,\r\n        choices,\r\n        answer: map[idx],\r\n        rationale: row.rationale ?? \"\",\r\n      });\r\n      continue;\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nfunction loadDeck(): QuizItem[] {\r\n  try {\r\n    const raw = localStorage.getItem(\"quiz:deck\");\r\n    if (!raw) return [];\r\n    const parsed = JSON.parse(raw) as RawDeckAny;\r\n    return normalizeDeck(parsed);\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default function QuizPage() {\r\n  const [deck, setDeck] = useState<QuizItem[]>([]);\r\n  const [idx, setIdx] = useState(0);\r\n  const [selected, setSelected] = useState<\"A\" | \"B\" | \"C\" | \"D\" | null>(null);\r\n  const [revealed, setRevealed] = useState(false);\r\n  const [correctCount, setCorrectCount] = useState(0);\r\n  const [visited, setVisited] = useState<boolean[]>([]); // track which items have been answered at least once\r\n\r\n  // Load deck on mount\r\n  useEffect(() => {\r\n    const d = loadDeck();\r\n    if (d.length === 0) {\r\n      // Fallback example so page renders cleanly\r\n      setDeck([\r\n        {\r\n          domain: \"Demo\",\r\n          question: \"Which schedule delivers reinforcement after a fixed number of responses?\",\r\n          choices: [\"VI\", \"VR\", \"FR\", \"FI\"],\r\n          answer: \"C\",\r\n          rationale: \"FR delivers reinforcement after a set number of responses (e.g., FR5).\",\r\n        },\r\n      ]);\r\n      setVisited([false]);\r\n    } else {\r\n      setDeck(d);\r\n      setVisited(new Array(d.length).fill(false));\r\n    }\r\n  }, []);\r\n\r\n  const total = deck.length;\r\n  const current = deck[idx];\r\n\r\n  const isCorrect = useMemo(() => {\r\n    if (!selected || !current) return false;\r\n    return selected === current.answer;\r\n  }, [selected, current]);\r\n\r\n  const onChoose = useCallback(\r\n    (choice: \"A\" | \"B\" | \"C\" | \"D\") => {\r\n      if (revealed) return; // lock after reveal\r\n      setSelected(choice);\r\n      setRevealed(true);\r\n      setVisited((v) => {\r\n        const next = v.slice();\r\n        next[idx] = true;\r\n        return next;\r\n      });\r\n      if (current && choice === current.answer) {\r\n        setCorrectCount((n) => n + 1);\r\n      }\r\n    },\r\n    [revealed, idx, current]\r\n  );\r\n\r\n  const goNext = useCallback(() => {\r\n    if (total === 0) return;\r\n    setSelected(null);\r\n    setRevealed(false);\r\n    setIdx((i) => (i + 1 < total ? i + 1 : i));\r\n  }, [total]);\r\n\r\n  const goPrev = useCallback(() => {\r\n    if (total === 0) return;\r\n    setSelected(null);\r\n    setRevealed(false);\r\n    setIdx((i) => (i - 1 >= 0 ? i - 1 : i));\r\n  }, [total]);\r\n\r\n  const resetAll = useCallback(() => {\r\n    setIdx(0);\r\n    setSelected(null);\r\n    setRevealed(false);\r\n    setCorrectCount(0);\r\n    setVisited(new Array(deck.length).fill(false));\r\n  }, [deck.length]);\r\n\r\n  // Keyboard shortcuts\r\n  useEffect(() => {\r\n    const onKey = (e: KeyboardEvent) => {\r\n      const key = e.key.toLowerCase();\r\n      if ([\"a\", \"b\", \"c\", \"d\"].includes(key)) {\r\n        const map: Record<string, \"A\" | \"B\" | \"C\" | \"D\"> = { a: \"A\", b: \"B\", c: \"C\", d: \"D\" };\r\n        onChoose(map[key]);\r\n      } else if (key === \"n\") {\r\n        goNext();\r\n      } else if (key === \"p\") {\r\n        goPrev();\r\n      } else if (key === \"r\") {\r\n        resetAll();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [onChoose, goNext, goPrev, resetAll]);\r\n\r\n  // Derived stats\r\n  const answeredCount = visited.filter(Boolean).length;\r\n  const scorePct = total ? Math.round((correctCount / total) * 100) : 0;\r\n  const progressPct = total ? Math.round((answeredCount / total) * 100) : 0;\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-gray-50\">\r\n      {/* Title row (consistent with Flashcards page) */}\r\n      <section className=\"mx-auto max-w-5xl px-6 pt-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Quiz</h1>\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"text-sm text-gray-600\">\r\n              Score: <span className=\"font-semibold\">{correctCount}</span> / {total} ({scorePct}%)\r\n            </div>\r\n            <button\r\n              onClick={resetAll}\r\n              className=\"rounded-xl border px-3 py-1.5 text-sm font-medium hover:bg-gray-100\"\r\n              title=\"Reset (R)\"\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <p className=\"mt-1 text-sm text-gray-600\">\r\n          Use A/B/C/D, N (next), P (prev), R (reset)\r\n        </p>\r\n      </section>\r\n\r\n      {/* Body */}\r\n      <section className=\"mx-auto max-w-5xl px-6 py-6\">\r\n        {/* Progress */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"h-2 w-full overflow-hidden rounded-full bg-gray-200\">\r\n            <div\r\n              className=\"h-full bg-blue-600 transition-all\"\r\n              style={{ width: `${progressPct}%` }}\r\n            />\r\n          </div>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            Progress: {answeredCount}/{total} ({progressPct}%)\r\n          </p>\r\n        </div>\r\n\r\n        {/* Question Card */}\r\n        {current ? (\r\n          <div className=\"rounded-2xl bg-white p-6 shadow-md\">\r\n            {/* Meta */}\r\n            <div className=\"mb-2 flex items-center justify-between\">\r\n              <span className=\"text-xs font-medium uppercase tracking-wide text-gray-500\">\r\n                {current.domain || \"Domain\"}\r\n              </span>\r\n              <span className=\"text-xs text-gray-500\">\r\n                Q {idx + 1} / {total}\r\n              </span>\r\n            </div>\r\n\r\n            {/* Question */}\r\n            <h2 className=\"mb-6 text-xl font-semibold leading-snug text-gray-900\">\r\n              {current.question}\r\n            </h2>\r\n\r\n            {/* Choices */}\r\n            <div className=\"grid gap-3\">\r\n              {([\"A\", \"B\", \"C\", \"D\"] as const).map((label, i) => {\r\n                const choiceText = current.choices[i] ?? \"\";\r\n                const isSelected = selected === label;\r\n                const isAnswer = current.answer === label;\r\n\r\n                // Base + stateful styles\r\n                let base =\r\n                  \"w-full rounded-xl border px-4 py-3 text-left transition focus:outline-none\";\r\n                let cls = \"border-gray-300 hover:bg-gray-50\";\r\n\r\n                if (!revealed && isSelected) {\r\n                  cls = \"border-blue-500 ring-2 ring-blue-500/30\";\r\n                }\r\n\r\n                if (revealed) {\r\n                  if (isAnswer) cls = \"border-green-600 bg-green-50\";\r\n                  if (!isAnswer && isSelected) cls = \"border-red-600 bg-red-50\";\r\n                }\r\n\r\n                return (\r\n                  <button\r\n                    key={label}\r\n                    disabled={revealed}\r\n                    onClick={() => onChoose(label)}\r\n                    className={`${base} ${cls}`}\r\n                  >\r\n                    <div className=\"flex items-start gap-3\">\r\n                      <span className=\"mt-0.5 inline-flex h-6 w-6 shrink-0 items-center justify-center rounded-md border text-sm font-bold\">\r\n                        {label}\r\n                      </span>\r\n                      <span className=\"text-gray-900\">{choiceText}</span>\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Rationale (persists until navigation/reset) */}\r\n            {revealed && (\r\n              <div className=\"mt-6 rounded-xl border border-blue-200 bg-blue-50 p-4\">\r\n                <p className=\"mb-1 text-sm font-semibold text-blue-800\">\r\n                  {isCorrect ? \"Correct ✅\" : \"Not quite ❌\"}\r\n                </p>\r\n                {current.rationale ? (\r\n                  <p className=\"text-blue-900\">{current.rationale}</p>\r\n                ) : (\r\n                  <p className=\"text-blue-900\">No rationale provided for this item.</p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Controls */}\r\n            <div className=\"mt-6 flex items-center justify-between\">\r\n              <button\r\n                onClick={goPrev}\r\n                disabled={idx === 0}\r\n                className=\"rounded-xl border px-4 py-2 font-medium hover:bg-gray-100 disabled:cursor-not-allowed disabled:opacity-50\"\r\n                title=\"Prev (P)\"\r\n              >\r\n                ← Prev\r\n              </button>\r\n\r\n              <div className=\"text-sm text-gray-500\">\r\n                {revealed ? \"Press Next to continue\" : \"Choose an answer\"}\r\n              </div>\r\n\r\n              <button\r\n                onClick={goNext}\r\n                disabled={idx >= total - 1}\r\n                className=\"rounded-xl bg-blue-600 px-4 py-2 font-semibold text-white hover:bg-blue-700 disabled:cursor-not-allowed disabled:opacity-50\"\r\n                title=\"Next (N)\"\r\n              >\r\n                Next →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"rounded-2xl border border-dashed p-8 text-center text-gray-500\">\r\n            No quiz deck found in <code>localStorage</code> at <code>quiz:deck</code>. Load your deck and refresh.\r\n          </div>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/quiz\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}