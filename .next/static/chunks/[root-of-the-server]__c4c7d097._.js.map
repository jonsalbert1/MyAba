{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/lib/storage.ts"],"sourcesContent":["// lib/storage.ts\r\nexport type FlashCard = { term: string; def: string };\r\nexport type QuizItem = {\r\n  domain?: string;\r\n  question: string;\r\n  a: string;\r\n  b: string;\r\n  c: string;\r\n  d: string;\r\n  answer: \"A\" | \"B\" | \"C\" | \"D\";\r\n  rationale?: string;\r\n};\r\n\r\nconst safe = <T,>(key: string, fallback: T): T => {\r\n  if (typeof window === \"undefined\") return fallback;\r\n  try {\r\n    const raw = localStorage.getItem(key);\r\n    return raw ? (JSON.parse(raw) as T) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n};\r\n\r\nexport const loadFlashcards = () => safe<FlashCard[]>(\"safmeds:deck\", []);\r\nexport const saveFlashcards = (arr: FlashCard[]) =>\r\n  localStorage.setItem(\"safmeds:deck\", JSON.stringify(arr));\r\n\r\nexport const loadQuiz = () => safe<QuizItem[]>(\"quiz:deck\", []);\r\nexport const saveQuiz = (arr: QuizItem[]) =>\r\n  localStorage.setItem(\"quiz:deck\", JSON.stringify(arr));\r\n\r\nexport type SafMedsTrial = { timestamp: number; correct: number; errors: number; secs: number };\r\nexport const loadSafMedsTrials = () => safe<SafMedsTrial[]>(\"safmeds:trials\", []);\r\nexport const saveSafMedsTrials = (arr: SafMedsTrial[]) =>\r\n  localStorage.setItem(\"safmeds:trials\", JSON.stringify(arr));\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;;;;;;;;;;AAajB,MAAM,OAAO,CAAK,KAAa;IAC7B;;IACA,IAAI;QACF,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,OAAO,MAAO,KAAK,KAAK,CAAC,OAAa;IACxC,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,iBAAiB,IAAM,KAAkB,gBAAgB,EAAE;AACjE,MAAM,iBAAiB,CAAC,MAC7B,aAAa,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;AAE/C,MAAM,WAAW,IAAM,KAAiB,aAAa,EAAE;AACvD,MAAM,WAAW,CAAC,MACvB,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;AAG5C,MAAM,oBAAoB,IAAM,KAAqB,kBAAkB,EAAE;AACzE,MAAM,oBAAoB,CAAC,MAChC,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jonsa/JSA/myaba/pages/safmeds.tsx"],"sourcesContent":["// pages/safmeds.tsx\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport {\r\n  FlashCard,\r\n  loadFlashcards,\r\n  saveFlashcards,\r\n  loadSafMedsTrials,\r\n  saveSafMedsTrials,\r\n  SafMedsTrial,\r\n} from \"../lib/storage\";\r\n\r\nexport default function SafMedsPage() {\r\n  const [deck, setDeck] = useState<FlashCard[]>([]);\r\n  const [secs, setSecs] = useState(60);\r\n  const [running, setRunning] = useState(false);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n  const [current, setCurrent] = useState(0);\r\n  const [trials, setTrials] = useState<SafMedsTrial[]>([]);\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  // keep latest counts for saving at stop/auto-stop\r\n  const correctRef = useRef(0);\r\n  const errorsRef = useRef(0);\r\n  const stoppingRef = useRef(false);\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Hydrate from DB first; fall back to localStorage\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    async function loadAll() {\r\n      // flashcards from DB\r\n      try {\r\n        const fc = await fetch(\"/api/flashcards/list?deckId=default\").then((r) => r.json());\r\n        if (!cancelled && Array.isArray(fc.records) && fc.records.length) {\r\n          setDeck(fc.records);\r\n        } else if (!cancelled) {\r\n          setDeck(loadFlashcards());\r\n        }\r\n      } catch {\r\n        if (!cancelled) setDeck(loadFlashcards());\r\n      }\r\n\r\n      // trials from DB\r\n      try {\r\n        const tr = await fetch(\"/api/safmeds/listTrials?deckId=default\").then((r) => r.json());\r\n        if (!cancelled && Array.isArray(tr.records)) {\r\n          const mapped: SafMedsTrial[] = tr.records.map((r: any) => ({\r\n            timestamp: Number(r.timestamp_ms),\r\n            correct: Number(r.correct),\r\n            errors: Number(r.errors),\r\n            secs: Number(r.secs),\r\n          }));\r\n          setTrials(mapped);\r\n        } else if (!cancelled) {\r\n          setTrials(loadSafMedsTrials());\r\n        }\r\n      } catch {\r\n        if (!cancelled) setTrials(loadSafMedsTrials());\r\n      }\r\n    }\r\n\r\n    loadAll();\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // mirror counts into refs\r\n  useEffect(() => {\r\n    correctRef.current = correct;\r\n  }, [correct]);\r\n  useEffect(() => {\r\n    errorsRef.current = errors;\r\n  }, [errors]);\r\n\r\n  // timer\r\n  useEffect(() => {\r\n    if (!running) return;\r\n    timerRef.current = setInterval(() => {\r\n      setSecs((s) => {\r\n        if (s <= 1) {\r\n          stopTrial(true); // auto-stop at 0\r\n          return 0;\r\n        }\r\n        return s - 1;\r\n      });\r\n    }, 1000);\r\n    return () => {\r\n      if (timerRef.current) clearInterval(timerRef.current);\r\n    };\r\n  }, [running]);\r\n\r\n  const card = deck[current];\r\n\r\n  function startTrial() {\r\n    setCorrect(0);\r\n    setErrors(0);\r\n    correctRef.current = 0;\r\n    errorsRef.current = 0;\r\n    stoppingRef.current = false;\r\n\r\n    setSecs(60);\r\n    setFlipped(false);\r\n    setRunning(true);\r\n  }\r\n\r\n  function stopTrial(auto = false) {\r\n    if (stoppingRef.current) return;\r\n    stoppingRef.current = true;\r\n\r\n    setRunning(false);\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n\r\n    // Save to local history\r\n    const rec: SafMedsTrial = {\r\n      timestamp: Date.now(),\r\n      correct: correctRef.current,\r\n      errors: errorsRef.current,\r\n      secs: 60,\r\n    };\r\n    const next = [...trials, rec];\r\n    setTrials(next);\r\n    saveSafMedsTrials(next);\r\n\r\n    // Persist to DB (non-blocking)\r\n    fetch(\"/api/safmeds/addTrial\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        deckId: \"default\",\r\n        timestamp_ms: rec.timestamp,\r\n        correct: rec.correct,\r\n        errors: rec.errors,\r\n        secs: rec.secs,\r\n      }),\r\n    }).catch(() => {});\r\n\r\n    // If auto, keep UI calm; if manual stop, do nothing special\r\n  }\r\n\r\n  const accuracy = useMemo(() => {\r\n    const total = correct + errors;\r\n    return total === 0 ? 0 : Math.round((correct / total) * 100);\r\n  }, [correct, errors]);\r\n\r\n  function nextCard() {\r\n    if (!deck.length) return;\r\n    setCurrent((i) => (i + 1) % deck.length);\r\n    setFlipped(false); // always show Term first\r\n  }\r\n\r\n  // Buttons rely on live \"running\" (buttons disabled when not running)\r\n  function markCorrect() {\r\n    if (!running) return;\r\n    setCorrect((c) => {\r\n      const v = c + 1;\r\n      correctRef.current = v;\r\n      return v;\r\n    });\r\n    nextCard();\r\n  }\r\n\r\n  function markError() {\r\n    if (!running) return;\r\n    setErrors((e) => {\r\n      const v = e + 1;\r\n      errorsRef.current = v;\r\n      return v;\r\n    });\r\n    nextCard();\r\n  }\r\n\r\n  function onCSVUpload(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const f = e.target.files?.[0];\r\n    if (!f) return;\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const txt = String(reader.result || \"\");\r\n      const lines = txt.split(/\\r?\\n/).filter(Boolean);\r\n      const rows: FlashCard[] = [];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const parts = lines[i].split(\",\");\r\n        if (i === 0 && /term/i.test(parts[0])) continue;\r\n        if (parts.length >= 2) rows.push({ term: parts[0].trim(), def: parts.slice(1).join(\",\").trim() });\r\n      }\r\n      saveFlashcards(rows); // local\r\n      setDeck(rows);\r\n      setCurrent(0);\r\n      setFlipped(false);\r\n      // optional: also push to DB if you added the bulkUpsert route\r\n      fetch(\"/api/flashcards/bulkUpsert\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ deckId: \"default\", records: rows }),\r\n      }).catch(() => {});\r\n    };\r\n    reader.readAsText(f);\r\n  }\r\n\r\n  // Shuffle deck (disabled while running)\r\n  function shuffleDeck() {\r\n    if (running || deck.length < 2) return;\r\n    const arr = deck.slice();\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    setDeck(arr);\r\n    setCurrent(0);\r\n    setFlipped(false);\r\n  }\r\n\r\n  // Space flips card\r\n  useEffect(() => {\r\n    function onKey(e: KeyboardEvent) {\r\n      if (e.code === \"Space\") {\r\n        e.preventDefault();\r\n        setFlipped((f) => !f);\r\n      }\r\n    }\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, []);\r\n\r\n  return (\r\n    <main style={{ maxWidth: 1000, margin: \"0 auto\", padding: 24 }}>\r\n      <h1 style={{ fontSize: 24, marginBottom: 10 }}>SAFMEDS</h1>\r\n      <p style={{ color: \"#555\" }}>\r\n        One-minute timing. Use the same <code>term,def</code> CSV as Flashcards. Click the card (or press Space) to flip.\r\n      </p>\r\n\r\n      <div style={{ display: \"flex\", gap: 10, flexWrap: \"wrap\" }}>\r\n        <label style={importBtn}>\r\n          Import CSV\r\n          <input type=\"file\" accept=\".csv\" onChange={onCSVUpload} style={{ display: \"none\" }} />\r\n        </label>\r\n\r\n        <button onClick={shuffleDeck} style={ghostBtn} disabled={running || deck.length < 2}>\r\n          Shuffle Deck\r\n        </button>\r\n      </div>\r\n\r\n      <section style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16, marginTop: 16 }}>\r\n        {/* LEFT: Timer + Card + Buttons */}\r\n        <div style={panel}>\r\n          <div style={{ fontSize: 48, fontWeight: 800, textAlign: \"center\" }}>{secs}s</div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10, marginTop: 12 }}>\r\n            {!running ? (\r\n              <button onClick={startTrial} style={primaryBtn}>Start</button>\r\n            ) : (\r\n              <button onClick={() => stopTrial(false)} style={dangerBtn}>Stop</button>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 16, marginTop: 16 }}>\r\n            <Stat label=\"Correct\" value={correct} />\r\n            <Stat label=\"Errors\" value={errors} />\r\n            <Stat label=\"Accuracy\" value={`${accuracy}%`} />\r\n          </div>\r\n\r\n          {/* Flip Card */}\r\n          <div\r\n            onClick={() => setFlipped((f) => !f)}\r\n            style={{\r\n              marginTop: 16,\r\n              background: \"white\",\r\n              border: \"1px solid #e5e7eb\",\r\n              borderRadius: 14,\r\n              padding: 24,\r\n              minHeight: 140,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              gap: 8,\r\n              cursor: \"pointer\",\r\n              boxShadow: \"0 8px 18px rgba(0,0,0,0.06)\",\r\n              transition: \"transform 0.15s\",\r\n            }}\r\n            title=\"Click to flip\"\r\n          >\r\n            {!card ? (\r\n              <div style={{ color: \"#666\" }}>Import a deck to begin</div>\r\n            ) : !flipped ? (\r\n              <>\r\n                <div style={{ fontWeight: 700, color: \"#666\" }}>Term</div>\r\n                <div style={{ fontSize: 22 }}>{card.term}</div>\r\n                <Hint />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div style={{ fontWeight: 700, color: \"#666\" }}>Definition</div>\r\n                <div style={{ color: \"#333\" }}>{card.def}</div>\r\n                <Hint flipped />\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", gap: 10, marginTop: 12 }}>\r\n            <button onClick={markCorrect} style={okBtn} disabled={!running}>\r\n              Mark Correct\r\n            </button>\r\n            <button onClick={markError} style={warnBtn} disabled={!running}>\r\n              Mark Error\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RIGHT: History + Chart */}\r\n        <div style={panel}>\r\n          <h3 style={{ marginTop: 0 }}>Session History</h3>\r\n          {trials.length === 0 ? (\r\n            <div style={{ color: \"#666\" }}>No trials yet.</div>\r\n          ) : (\r\n            <>\r\n              <BarChart trials={trials} />\r\n              <ul style={{ marginTop: 12, paddingLeft: 18 }}>\r\n                {trials.slice(-8).reverse().map((t, i) => (\r\n                  <li key={t.timestamp + \"_\" + i}>\r\n                    {new Date(t.timestamp).toLocaleString()} — Correct: <b>{t.correct}</b>, Errors: <b>{t.errors}</b>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction Hint({ flipped = false }: { flipped?: boolean }) {\r\n  return (\r\n    <div style={{ marginTop: 8, fontSize: 12, color: \"#888\" }}>\r\n      {flipped ? \"Click (or Space) to show Term\" : \"Click (or Space) to show Definition\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Stat({ label, value }: { label: string; value: number | string }) {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ fontSize: 12, color: \"#666\" }}>{label}</div>\r\n      <div style={{ fontSize: 20, fontWeight: 700 }}>{value}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BarChart({ trials }: { trials: SafMedsTrial[] }) {\r\n  const last = trials.slice(-12);\r\n  const max = Math.max(1, ...last.map((t) => t.correct));\r\n  const w = 480, h = 160, pad = 24;\r\n  const barW = (w - pad * 2) / (last.length || 1);\r\n\r\n  return (\r\n    <svg width={w} height={h} style={{ background: \"#fafafa\", borderRadius: 8, border: \"1px solid #eee\" }}>\r\n      <line x1={pad} y1={h - pad} x2={w - pad} y2={h - pad} stroke=\"#ccc\" />\r\n      <line x1={pad} y1={pad} x2={pad} y2={h - pad} stroke=\"#ccc\" />\r\n      {last.map((t, i) => {\r\n        const x = pad + i * barW + 6;\r\n        const bh = ((t.correct / max) * (h - pad * 2)) | 0;\r\n        const y = h - pad - bh;\r\n        return <rect key={t.timestamp + \"_\" + i} x={x} y={y} width={barW - 12} height={bh} fill=\"#0b3d91\" />;\r\n      })}\r\n      <text x={pad} y={pad - 6} fontSize=\"10\" fill=\"#555\">max {max}</text>\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst panel: React.CSSProperties = {\r\n  background: \"white\",\r\n  border: \"1px solid #e5e7eb\",\r\n  borderRadius: 14,\r\n  padding: 16,\r\n  boxShadow: \"0 6px 14px rgba(0,0,0,0.06)\",\r\n  minHeight: 260,\r\n};\r\n\r\nconst importBtn: React.CSSProperties = {\r\n  display: \"inline-block\",\r\n  padding: \"10px 14px\",\r\n  background: \"#0b3d91\",\r\n  color: \"white\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst ghostBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"white\",\r\n  color: \"#0b3d91\",\r\n  border: \"1px solid #0b3d91\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst primaryBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"#0b3d91\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst dangerBtn: React.CSSProperties = {\r\n  padding: \"10px 14px\",\r\n  background: \"#d64545\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst okBtn: React.CSSProperties = {\r\n  padding: \"8px 12px\",\r\n  background: \"#2bb673\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst warnBtn: React.CSSProperties = {\r\n  padding: \"8px 12px\",\r\n  background: \"#ffae42\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: 8,\r\n  cursor: \"pointer\",\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1368, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/safmeds\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}